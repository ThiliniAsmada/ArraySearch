
/**
 *
 * @author Thilini Asmada
 */
public class ArraySearch extends javax.swing.JFrame {

    public static int n, v;
    public static int array[];//define array
    long ls, lf, lt, bs, bf, bt, js, jf, jt, is, ie, it;//run time variables
    int num = 1; //liner variables
    int q = (int) Math.sqrt(n), j;//jump variables
    /**
     * Creates new form ArraySearch
     */
    public ArraySearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainP = new javax.swing.JPanel();
        CreateP = new javax.swing.JPanel();
        CreateHeadP = new javax.swing.JPanel();
        CreateArrayL = new javax.swing.JLabel();
        GetArraySizeTF = new javax.swing.JTextField();
        CreateB = new javax.swing.JButton();
        ArraySizeP = new javax.swing.JPanel();
        ArraySizeL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayTA = new javax.swing.JTextArea();
        TryAgainB = new javax.swing.JButton();
        SearchP = new javax.swing.JPanel();
        SearchHeadP = new javax.swing.JPanel();
        SearchL = new javax.swing.JLabel();
        GetValueP = new javax.swing.JPanel();
        SreachValueL = new javax.swing.JLabel();
        SearchValueTF = new javax.swing.JTextField();
        LinerAnsL = new javax.swing.JLabel();
        LinerRunL = new javax.swing.JLabel();
        LinerAnsTF = new javax.swing.JTextField();
        LinerRunTF = new javax.swing.JTextField();
        LinerB = new javax.swing.JButton();
        BinaryAnsL = new javax.swing.JLabel();
        BinaryRunL = new javax.swing.JLabel();
        BinaryAnsTF = new javax.swing.JTextField();
        BinaryRunTF = new javax.swing.JTextField();
        BinaryB = new javax.swing.JButton();
        JumpAnsL = new javax.swing.JLabel();
        JumpRunL = new javax.swing.JLabel();
        JumpAnsTF = new javax.swing.JTextField();
        JumpRunTF = new javax.swing.JTextField();
        JumpB = new javax.swing.JButton();
        InterAnsL = new javax.swing.JLabel();
        InterRunL = new javax.swing.JLabel();
        InterAnsTF = new javax.swing.JTextField();
        InterRunTF = new javax.swing.JTextField();
        InterB = new javax.swing.JButton();
        RefreshB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainP.setBackground(new java.awt.Color(255, 255, 204));

        CreateP.setBackground(new java.awt.Color(255, 222, 88));

        CreateHeadP.setBackground(new java.awt.Color(0, 204, 102));

        CreateArrayL.setFont(new java.awt.Font("Sitka Text", 3, 12)); // NOI18N
        CreateArrayL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CreateArrayL.setText("Create Array");

        javax.swing.GroupLayout CreateHeadPLayout = new javax.swing.GroupLayout(CreateHeadP);
        CreateHeadP.setLayout(CreateHeadPLayout);
        CreateHeadPLayout.setHorizontalGroup(
            CreateHeadPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateHeadPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateArrayL, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        CreateHeadPLayout.setVerticalGroup(
            CreateHeadPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateHeadPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateArrayL)
                .addContainerGap())
        );

        GetArraySizeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetArraySizeTFActionPerformed(evt);
            }
        });

        CreateB.setBackground(new java.awt.Color(255, 153, 0));
        CreateB.setText("Create");
        CreateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBActionPerformed(evt);
            }
        });

        ArraySizeP.setBackground(new java.awt.Color(255, 102, 0));

        ArraySizeL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ArraySizeL.setText("Array Size");

        javax.swing.GroupLayout ArraySizePLayout = new javax.swing.GroupLayout(ArraySizeP);
        ArraySizeP.setLayout(ArraySizePLayout);
        ArraySizePLayout.setHorizontalGroup(
            ArraySizePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ArraySizePLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ArraySizeL, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );
        ArraySizePLayout.setVerticalGroup(
            ArraySizePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArraySizePLayout.createSequentialGroup()
                .addComponent(ArraySizeL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        DisplayTA.setLineWrap(true);
        DisplayTA.setRows(5);
        jScrollPane1.setViewportView(DisplayTA);

        TryAgainB.setBackground(new java.awt.Color(102, 255, 0));
        TryAgainB.setText("Try again");
        TryAgainB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TryAgainBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreatePLayout = new javax.swing.GroupLayout(CreateP);
        CreateP.setLayout(CreatePLayout);
        CreatePLayout.setHorizontalGroup(
            CreatePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreatePLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreatePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(CreateB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CreateHeadP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(CreatePLayout.createSequentialGroup()
                        .addComponent(ArraySizeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GetArraySizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(CreatePLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(TryAgainB, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CreatePLayout.setVerticalGroup(
            CreatePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateHeadP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreatePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ArraySizeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GetArraySizeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(CreateB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TryAgainB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GetArraySizeTF.getAccessibleContext().setAccessibleName("enterArrSize");
        CreateB.getAccessibleContext().setAccessibleName("create");

        SearchP.setBackground(new java.awt.Color(255, 222, 80));

        SearchHeadP.setBackground(new java.awt.Color(0, 204, 51));
        SearchHeadP.setFont(new java.awt.Font("Sitka Text", 3, 12)); // NOI18N

        SearchL.setFont(new java.awt.Font("Sitka Text", 3, 12)); // NOI18N
        SearchL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SearchL.setText("Search Array");

        javax.swing.GroupLayout SearchHeadPLayout = new javax.swing.GroupLayout(SearchHeadP);
        SearchHeadP.setLayout(SearchHeadPLayout);
        SearchHeadPLayout.setHorizontalGroup(
            SearchHeadPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchHeadPLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(SearchL, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SearchHeadPLayout.setVerticalGroup(
            SearchHeadPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchHeadPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SearchL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GetValueP.setBackground(new java.awt.Color(255, 102, 0));

        SreachValueL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SreachValueL.setText("Value to Search");

        javax.swing.GroupLayout GetValuePLayout = new javax.swing.GroupLayout(GetValueP);
        GetValueP.setLayout(GetValuePLayout);
        GetValuePLayout.setHorizontalGroup(
            GetValuePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GetValuePLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(SreachValueL, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addContainerGap())
        );
        GetValuePLayout.setVerticalGroup(
            GetValuePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GetValuePLayout.createSequentialGroup()
                .addComponent(SreachValueL, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        SearchValueTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchValueTFActionPerformed(evt);
            }
        });

        LinerAnsL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LinerAnsL.setText("Answer");

        LinerRunL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LinerRunL.setText("Run Time");

        LinerAnsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinerAnsTFActionPerformed(evt);
            }
        });

        LinerRunTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinerRunTFActionPerformed(evt);
            }
        });

        LinerB.setBackground(new java.awt.Color(255, 102, 0));
        LinerB.setText("Liner Search");
        LinerB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LinerBActionPerformed(evt);
            }
        });

        BinaryAnsL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BinaryAnsL.setText("Answer");

        BinaryRunL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BinaryRunL.setText("Run Time");

        BinaryAnsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinaryAnsTFActionPerformed(evt);
            }
        });

        BinaryRunTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinaryRunTFActionPerformed(evt);
            }
        });

        BinaryB.setBackground(new java.awt.Color(255, 102, 0));
        BinaryB.setText("Binary Search");
        BinaryB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinaryBActionPerformed(evt);
            }
        });

        JumpAnsL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JumpAnsL.setText("Answer");

        JumpRunL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JumpRunL.setText("Run Time");

        JumpAnsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumpAnsTFActionPerformed(evt);
            }
        });

        JumpRunTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumpRunTFActionPerformed(evt);
            }
        });

        JumpB.setBackground(new java.awt.Color(255, 102, 0));
        JumpB.setText("Jump Search");
        JumpB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumpBActionPerformed(evt);
            }
        });

        InterAnsL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        InterAnsL.setText("Answer");

        InterRunL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        InterRunL.setText("Run Time");

        InterAnsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterAnsTFActionPerformed(evt);
            }
        });

        InterRunTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterRunTFActionPerformed(evt);
            }
        });

        InterB.setBackground(new java.awt.Color(255, 102, 0));
        InterB.setText("Interpolation Search");
        InterB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterBActionPerformed(evt);
            }
        });

        RefreshB.setBackground(new java.awt.Color(51, 255, 0));
        RefreshB.setText("Refresh");
        RefreshB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchPLayout = new javax.swing.GroupLayout(SearchP);
        SearchP.setLayout(SearchPLayout);
        SearchPLayout.setHorizontalGroup(
            SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchHeadP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(SearchPLayout.createSequentialGroup()
                        .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SearchPLayout.createSequentialGroup()
                                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SearchPLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LinerAnsL)
                                            .addComponent(LinerRunL)
                                            .addComponent(BinaryAnsL)
                                            .addComponent(JumpAnsL)
                                            .addComponent(JumpRunL)
                                            .addComponent(InterAnsL)
                                            .addComponent(InterRunL)))
                                    .addComponent(BinaryRunL, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(SearchPLayout.createSequentialGroup()
                                        .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(InterRunTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                            .addComponent(LinerRunTF)
                                            .addComponent(BinaryRunTF)
                                            .addComponent(JumpRunTF))
                                        .addGap(18, 18, 18)
                                        .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(LinerB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(BinaryB, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                                .addComponent(JumpB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(InterB)))
                                    .addComponent(BinaryAnsTF)
                                    .addComponent(LinerAnsTF)
                                    .addComponent(JumpAnsTF)
                                    .addComponent(InterAnsTF)))
                            .addGroup(SearchPLayout.createSequentialGroup()
                                .addComponent(GetValueP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(SearchValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RefreshB)))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
        );
        SearchPLayout.setVerticalGroup(
            SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(SearchHeadP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GetValueP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchValueTF)
                        .addComponent(RefreshB)))
                .addGap(18, 18, 18)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LinerAnsL)
                    .addComponent(LinerAnsTF, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(LinerRunL)
                        .addComponent(LinerRunTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LinerB))
                .addGap(33, 33, 33)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BinaryAnsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinaryAnsL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BinaryRunTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BinaryRunL)
                    .addComponent(BinaryB))
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchPLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(JumpAnsL))
                    .addComponent(JumpAnsTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JumpRunL)
                    .addComponent(JumpRunTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JumpB))
                .addGap(28, 28, 28)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InterAnsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InterAnsL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InterRunTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InterRunL)
                    .addComponent(InterB))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout MainPLayout = new javax.swing.GroupLayout(MainP);
        MainP.setLayout(MainPLayout);
        MainPLayout.setHorizontalGroup(
            MainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        MainPLayout.setVerticalGroup(
            MainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SearchP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CreateP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MainP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GetArraySizeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetArraySizeTFActionPerformed
        // Get Array size

    }//GEN-LAST:event_GetArraySizeTFActionPerformed

    private void CreateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBActionPerformed
        // Create array

        n = Integer.parseInt(GetArraySizeTF.getText());
        array = new int[n];//define array
        String displayArray = "";

        for (int i = 0; i <= n - 1; i++) {
            array[i] = num;
            num = num + 2;
        }

        for (int k = 0; k <= n - 1; k++) {
            DisplayTA.setText(String.valueOf(array[k]));
            displayArray = displayArray + " " + String.valueOf(array[k]);
        }
        DisplayTA.setText(displayArray);
    }//GEN-LAST:event_CreateBActionPerformed

    private void SearchValueTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchValueTFActionPerformed
        // Get Search Value
    }//GEN-LAST:event_SearchValueTFActionPerformed

    private void LinerBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinerBActionPerformed
        v = Integer.parseInt(SearchValueTF.getText());
        int found = 0;
        // Liner Search*********************************************************
        ls = System.nanoTime();
        if(v<array[0]||v>array[n-1]){
            LinerAnsTF.setText("Value is not in the array!");
	}else{
            for (int x = 0; x <= n - 1; x++){
                if (array[x] == v){
                    found=1;
                    LinerAnsTF.setText(String.valueOf(x));
                    break;
                }
            }
            if (found==0){
                LinerAnsTF.setText("Value is not in the array!");
            }
        }
        lf = System.nanoTime(); 
        lt = lf - ls;
        LinerRunTF.setText(String.valueOf(lt));
    }//GEN-LAST:event_LinerBActionPerformed

    private void LinerAnsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinerAnsTFActionPerformed
        // Liner Search answer
    }//GEN-LAST:event_LinerAnsTFActionPerformed

    private void LinerRunTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LinerRunTFActionPerformed
        // Liner Search runtime
    }//GEN-LAST:event_LinerRunTFActionPerformed

    private void BinaryBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinaryBActionPerformed
        v = Integer.parseInt(SearchValueTF.getText());

        // Binary Search********************************************************
        int l = n - 1, f = 0, m = (l + f) / 2;
        bs = System.nanoTime();
        if(v<array[0] || v>array[n-1]){
            BinaryAnsTF.setText("Value is not in the array!");
	}else{
            while (f<=l){
                if (array[m]==v){
                    BinaryAnsTF.setText(String.valueOf(m));
                    break;
                }else if (array[m]<v){
                    f=m+1;
                }else{
                    l=m-1;
                }
                m=(l+f)/2;
            }
        
            if (f>l){
                BinaryAnsTF.setText("Value is not in the array!");
            }
        }
        bf = System.nanoTime();
        bt = bf - bs;
        BinaryRunTF.setText(String.valueOf(bt));
    }//GEN-LAST:event_BinaryBActionPerformed

    private void BinaryAnsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinaryAnsTFActionPerformed
        // binary search answer
    }//GEN-LAST:event_BinaryAnsTFActionPerformed

    private void BinaryRunTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinaryRunTFActionPerformed
        // binary search runtime
    }//GEN-LAST:event_BinaryRunTFActionPerformed

    private void JumpBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumpBActionPerformed
        v = Integer.parseInt(SearchValueTF.getText());

        // Jump search**********************************************************
        js = System.nanoTime();
        if(v<array[0]||v>array[n-1]){
            JumpAnsTF.setText("Value is not in the array!");
	}else{
            j = jump(q,array);
            if(j>-1){
                JumpAnsTF.setText(String.valueOf(j));
            }else{
                JumpAnsTF.setText("Value is not in the array!");
            }
	}
        jf = System.nanoTime();
        jt = jf - js;
        JumpRunTF.setText(String.valueOf(jt));
    }//GEN-LAST:event_JumpBActionPerformed

    private void JumpAnsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumpAnsTFActionPerformed
        // jump answer
    }//GEN-LAST:event_JumpAnsTFActionPerformed

    private void JumpRunTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumpRunTFActionPerformed
        // jump runtime
    }//GEN-LAST:event_JumpRunTFActionPerformed

    private void InterBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterBActionPerformed
        v = Integer.parseInt(SearchValueTF.getText());
        // Interpolation search*************************************************
        is = System.nanoTime();
        if(v<array[0] || v>array[n-1]){
            InterAnsTF.setText("Value is not in the array!");
	}else{
        int interp=inter(v,array);
            if(interp==-1){
		InterAnsTF.setText("Value is not in the array!");
            }else{
		InterAnsTF.setText(String.valueOf(interp));
            }
        }
        ie = System.nanoTime();
        it = ie - is;
        InterRunTF.setText(String.valueOf(it));

    }//GEN-LAST:event_InterBActionPerformed

    private void InterAnsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterAnsTFActionPerformed
        // interpolation answer
    }//GEN-LAST:event_InterAnsTFActionPerformed

    private void InterRunTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterRunTFActionPerformed
        // interpolation runtime
    }//GEN-LAST:event_InterRunTFActionPerformed

    private void RefreshBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshBActionPerformed
        // Refresh text feilds
            SearchValueTF.setText("");
            LinerAnsTF.setText("");
            LinerRunTF.setText("");
            BinaryAnsTF.setText("");
            BinaryRunTF.setText("");
            JumpAnsTF.setText("");
            JumpRunTF.setText("");
            InterAnsTF.setText("");
            InterRunTF.setText("");
            
    }//GEN-LAST:event_RefreshBActionPerformed

    private void TryAgainBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TryAgainBActionPerformed
        // Refresh array size
            GetArraySizeTF.setText("");
            SearchValueTF.setText("");
            LinerAnsTF.setText("");
            LinerRunTF.setText("");
            BinaryAnsTF.setText("");
            BinaryRunTF.setText("");
            JumpAnsTF.setText("");
            JumpRunTF.setText("");
            InterAnsTF.setText("");
            InterRunTF.setText("");
            DisplayTA.setText("");
    }//GEN-LAST:event_TryAgainBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArraySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArraySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArraySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArraySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArraySearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArraySizeL;
    private javax.swing.JPanel ArraySizeP;
    private javax.swing.JLabel BinaryAnsL;
    private javax.swing.JTextField BinaryAnsTF;
    private javax.swing.JButton BinaryB;
    private javax.swing.JLabel BinaryRunL;
    private javax.swing.JTextField BinaryRunTF;
    private javax.swing.JLabel CreateArrayL;
    private javax.swing.JButton CreateB;
    private javax.swing.JPanel CreateHeadP;
    private javax.swing.JPanel CreateP;
    private javax.swing.JTextArea DisplayTA;
    private javax.swing.JTextField GetArraySizeTF;
    private javax.swing.JPanel GetValueP;
    private javax.swing.JLabel InterAnsL;
    private javax.swing.JTextField InterAnsTF;
    private javax.swing.JButton InterB;
    private javax.swing.JLabel InterRunL;
    private javax.swing.JTextField InterRunTF;
    private javax.swing.JLabel JumpAnsL;
    private javax.swing.JTextField JumpAnsTF;
    private javax.swing.JButton JumpB;
    private javax.swing.JLabel JumpRunL;
    private javax.swing.JTextField JumpRunTF;
    private javax.swing.JLabel LinerAnsL;
    private javax.swing.JTextField LinerAnsTF;
    private javax.swing.JButton LinerB;
    private javax.swing.JLabel LinerRunL;
    private javax.swing.JTextField LinerRunTF;
    private javax.swing.JPanel MainP;
    private javax.swing.JButton RefreshB;
    private javax.swing.JPanel SearchHeadP;
    private javax.swing.JLabel SearchL;
    private javax.swing.JPanel SearchP;
    private javax.swing.JTextField SearchValueTF;
    private javax.swing.JLabel SreachValueL;
    private javax.swing.JButton TryAgainB;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    private int jump(int q, int[] array) {
        int i=0;
	while(i<=n-1){
            if(array[i]==v){
		JumpAnsTF.setText(String.valueOf(i));
		return i;
            }else if(array[i]<v && i+q>n-1){
		i=i+q;
            }else if(array[i]<v && i+q<n-1){
		for(int d=i+1;d<=n-1;d++){
                    if(array[d]==v){
			return d;
                    }else if(array[d]>v){
			return -1;
                    }
		}
            }else{
                i=i-q;
                for(int e=i+1;e<=i+q;e++){
                    if(array[e]==v){
                        return e;
                    }else if(array[e]>v){
                        return -1;
                    }
		}
            }
	}return -1;
    }
    
    public static int inter(int v,int[] array){
	int mid,le,he;	
	le = 0;
	he = n-1;
	while (v>=array[le] && v<=array[he] && le<=he){
            mid = le+(((he-le)*(v-array[le]))/(array[he]-array[le]));
            if(he==le){
                if (array[le]==v){
                    return le;
                }else{
                    return -1;
                }
            }
            if (array[mid]==v){  
		return mid;   
            }else if(array[mid]<v){  
		le=mid+1;
            }else{
		he=mid-1; 
            }
	}
	return -1;
    }
}
